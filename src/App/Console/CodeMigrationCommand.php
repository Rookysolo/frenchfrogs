<?php namespace FrenchFrogs\App\Console;

use Carbon\Carbon;
use FrenchFrogs\Laravel\Database\Schema\Blueprint;
use FrenchFrogs\Laravel\Support\Facades\Schema;
use FrenchFrogs\Maker\Maker;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Filesystem\Filesystem;
use FrenchFrogs\Laravel\Mail\Mailable;
use Illuminate\Support\Composer;

/**
 * Ajout d'un email
 *
 * Class CodeMailCommand
 * @package FrenchFrogs\App\Console
 */
class CodeMigrationCommand extends CodeCommand
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'code:migration {name? : name} {table? : table}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Création d\'une migration';


    /**
     * Execute the console command.
     *
     * @param Filesystem $filesystem
     * @param Composer $composer
     */
    public function handle(Filesystem $filesystem, Composer $composer)
    {
        // name
        $name = $this->argument('name') ?: static::CHOISE_NULL;
        $name = $this->askUntilValid('Quel est le nom de la migration?', 'migration_anonymous', 'required|min:6', $name);
        $name .= '_' . str_random(6);


        // Creation de la migration
        $path = $this->laravel->databasePath() . '/migrations';
        $filepath = $this->laravel['migration.creator']->create($name, $path);

        // CLASS
        $class = Maker::findClass($filepath);

        // On charge la migration
        require_once $filepath;

        // Cratiuon de la migration
        $migration = Maker::load($class);
        $migration->clearAliases();
        $migration->addAlias('Migration', Migration::class);
        $migration->addAlias('Blueprint', Blueprint::class);
        $migration->addAlias('Schema', Schema::class);
        $migration->setParent(Migration::class);

        // TAG
        $summary = $this->askUntilValid('Description');
        empty($summary) || $migration->setSummary($summary);
        $migration->addTag('source', 'Generated by ' . static::class);
        $migration->addTag('since', Carbon::now()->toFormattedDateString());

        // METHOD
        $method = $migration->addMethod('up');

        // table
        $table = $this->argument('table') ?: static::CHOISE_NULL;
        $table = $this->askUntilValid('Quel table voulez vous gerer?', static::CHOICE_EMPTY, null, $table);


        $body = '';
        if (!empty($table) && $table != static::CHOICE_EMPTY) {
            if (Schema::hasTable($table)) {
                $this->warn(sprintf('la table "%s" existe déjà... modification activé!!', $table));

                $body = <<<EOL
            Schema::table("$table", function(Blueprint \$table) {
                 //HERE IS YOUR CODE    
            });
EOL;
            } else {
                $body = <<<EOL
            Schema::create("$table", function(Blueprint \$table) {
                 //HERE IS YOUR CODE    
            });
EOL;
            }
        } else {
            $body = '//HERE IS YOUR CODE' . PHP_EOL;
        }

        $method->setBody($body);

        // inscription des element
        $migration->write();

        // Clean du formatage du fichier
        $this->reformat($filepath);
        $this->info('Migration généré : ');
        $this->warn($migration->getFilename());

        // recharge des elements
        $composer->dumpAutoloads();

        return;
    }
}
